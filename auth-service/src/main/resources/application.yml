queue:
  exchange: dev:amqp-exchange
  campaignQueue:
    name: dev:campaign-queue
    routingKey:
      all: dev:campaign.*
      addRecipient: dev:campaign.add-recipient
  userQueue:
    name: dev:user-queue
    routingKey:
      all: dev:user.*
      checkUserExist: dev:user.exist
      findUser: dev:user.find
      storedFile: dev:user.find-stored-file

provider:
  issuerUri: ${AUTH_SERVICE_URL}

rpt:
  campaignId: ${RPT_CAMPAIGN_ID}
  validityInMinute: ${RPT_VALIDITY_IN_MINUTE}

loki:
  url: ${LOKI_URL}

cron:
  username: ${CRON_USERNAME}
  password: ${CRON_PASSWORD}


frontend:
  gateway: ${FRONTEND_GATEWAY}

server:
  port: ${SERVER_PORT}

spring:
  jpa:
    openInView: false
    databasePlatform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddlAuto: update
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${MYSQL_URL}?autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
  application:
    name: auth-service
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirectUri: ${GOOGLE_REDIRECT_URI}
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
            redirectUri: ${FACEBOOK_REDIRECT_URI}
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            redirectUri: ${GITHUB_REDIRECT_URI}
  rabbitmq:
    host: host.docker.internal
    port: 5672

eureka:
  client:
    serviceUrl:
      defaultZone: ${DISCOVERY_SERVICE_URL}
